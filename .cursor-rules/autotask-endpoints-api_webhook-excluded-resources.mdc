---
description: webhooks;exclusions;resources;Configure webhook resource exclusions to prevent specific resources from triggering webhook events
globs: 
alwaysApply: false
---
---
description: webhooks;exclusions;resources;Configure webhook resource exclusions to prevent specific resources from triggering webhook events
---

# WebhookExcludedResources Endpoint

## Overview
The WebhookExcludedResources endpoint allows you to manage resources that should be excluded from triggering webhook events. When a resource is excluded, any modifications made by that resource will not generate outbound webhook calls, even if the triggering conditions are met.

## Entity Properties

| Property | Support |
|----------|---------|
| Create   | ✅ Yes  |
| Update   | ❌ No   |
| Query    | ✅ Yes  |
| Delete   | ✅ Yes  |

## Fields

| Field Name   | Type    | Required | Read Only | Description |
|-------------|---------|----------|-----------|-------------|
| id          | long    | Yes      | Yes       | Unique identifier for the webhook resource exclusion |
| ResourceID  | integer | Yes      | No        | The Autotask Resource ID to be excluded from triggering the webhook |
| WebhookID   | integer | Yes      | No        | The internal ID of the webhook from which the resource should be excluded |

## Usage Notes
- Creating an exclusion only prevents the specified resource from triggering the webhook associated with the provided WebhookID
- To exclude a resource from multiple webhooks, create separate exclusion records for each webhook
- The exclusion only affects outbound webhook calls - the resource can still perform other operations

## API Endpoints

### Create Exclusion
```http
POST https://webservices{n}.autotask.net/atservicesrest/v1.0/{EntityName}Webhooks/{webhookId}/ExcludedResources
```

#### Request Body
```json
{
    "ResourceID": integer,
    "WebhookID": integer
}
```

#### Example Request
```http
POST https://webservices6.autotask.net/atservicesrest/v1.0/ContactWebhooks/9/ExcludedResources

{
    "ResourceID": 29682900,
    "WebhookID": 9
}
```

## Error Handling
- Ensure both ResourceID and WebhookID exist before creating an exclusion
- Verify the webhook type matches the endpoint URL (e.g., ContactWebhooks)
- Handle HTTP status codes appropriately:
  - 201: Exclusion created successfully
  - 400: Invalid request format
  - 404: Resource or webhook not found
  - 409: Exclusion already exists

## Best Practices
1. Document all excluded resources for audit purposes
2. Regularly review exclusions to ensure they're still required
3. Consider impact on business processes before excluding critical resources
4. Test webhook behaviour after adding exclusions to verify expected functionality
