---
description: picklists;dropdowns;validation;Guide for implementing Autotask API picklist field handling and validation in n8n nodes
globs: 
alwaysApply: false
---
---
description: picklists;dropdowns;validation;Guide for implementing Autotask API picklist field handling and validation in n8n nodes
globs:
---

# Autotask Picklist Field Implementation

This guide covers the technical implementation details for handling Autotask API picklist fields in n8n node development.

## Picklist Detection

To identify picklist fields in API responses:

1. Check the `isPickList` boolean field in responses from `/entityInformation/fields`

## Picklist Properties Structure

### Core Properties

```typescript
interface PicklistValue {
  value: string;      // Internal picklist value
  label: string;      // Display name in UI
  isDefaultValue: boolean;
  sortOrder: boolean;
  parentValue: string | null;
  isActive: boolean;
  isSystem: boolean;
}
```

## Parent-Child Relationships

For dependent picklists:
1. Check `picklistParentFieldName` property existence
2. Filter `picklistValues` based on parent field value when present
3. Implement cascading updates when parent values change

## Implementation Requirements

1. Validation:
   - Only allow active picklist values (`isActive: true`)
   - Respect system value restrictions (`isSystem: true`)
   - Enforce parent-child dependencies

2. Error Handling:
   - Invalid value selections
   - Missing required parent values
   - Inactive or deprecated options

3. UI Considerations:
   - Sort options using `sortOrder`
   - Display `label` to users while storing `value`
   - Pre-select `isDefaultValue` items when appropriate

## Best Practices

1. Cache picklist values where appropriate
2. Implement real-time validation
3. Handle both single and multi-level dependencies
4. Maintain parent-child relationship integrity
