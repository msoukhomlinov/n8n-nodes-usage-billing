---
description: n8n node, Core UI design standards and best practices for n8n node development, based on official documentation. [ui design, standards, patterns]
globs: 
alwaysApply: false
---
---
description: n8n node, Core UI design standards and best practices for n8n node development, based on official documentation. [ui design, standards, patterns]
globs: 
---
# n8n Node UI Design Standards

1. Language and Text
   ```typescript
   // Use GUI terms over API terms
   {
     displayName: 'Task Status',     // GUI term
     name: 'taskStatus',
     type: 'options',
     options: [
       {
         name: 'In Progress',        // GUI term
         value: 'in_progress',       // API term
         description: 'Task is currently being worked on',
       }
     ],
     // Add API terms in hint if needed
     hint: 'API uses in_progress for In Progress status',
   }
   ```

2. Node Naming
   ```typescript
   // Correct trigger node naming
   {
     displayName: 'Shopify Trigger',  // Correct
     // Not: 'ShopifyTrigger' or 'Shopify trigger'
   }

   // Correct regular node naming
   {
     displayName: 'Asana',           // Correct
     // Not: 'Asana Node' or 'Asana node'
   }
   ```

3. Field Organisation
   ```typescript
   // Standard field order
   properties: [
     // 1. Credentials (automatic)
     
     // 2. Resource and Operation
     {
       displayName: 'Resource',
       name: 'resource',
       type: 'options',
       noDataExpression: true,
     },
     {
       displayName: 'Operation',
       name: 'operation',
       type: 'options',
       displayOptions: {
         show: {
           resource: ['task']
         }
       },
     },

     // 3. Required fields by importance
     {
       displayName: 'Document',    // Broader scope
       name: 'document',
       required: true,
     },
     {
       displayName: 'Page',        // Narrower scope
       name: 'page',
       required: true,
     },

     // 4. Optional fields in collections
     {
       displayName: 'Additional Fields',
       name: 'additionalFields',
       type: 'collection',
       placeholder: 'Add Field',
       options: [
         // Alphabetically ordered
       ],
     }
   ]
   ```

4. Progressive Disclosure
   ```typescript
   // Hide dependent fields until needed
   {
     displayName: 'Filter by Date',
     name: 'filterByDate',
     type: 'boolean',
     default: false,
   },
   {
     displayName: 'Date',
     name: 'filterDate',
     type: 'dateTime',
     displayOptions: {
       show: {
         filterByDate: [true]
       }
     }
   }
   ```

5. Common Field Types
   ```typescript
   // ID fields with dual selection
   {
     displayName: 'Workspace Name or ID',
     name: 'workspaceId',
     type: 'string',
     hint: 'Choose from the list or specify an ID using an expression',
     typeOptions: {
       loadOptionsMethod: 'getWorkspaces',
     },
   },

   // Toggle vs Options
   {
     displayName: 'Simplify Output',  // Clear what false means
     name: 'simplifyOutput',
     type: 'boolean',
   },
   {
     displayName: 'Update Mode',      // Unclear what false means
     name: 'updateMode',
     type: 'options',
     options: [
       {
         name: 'Append',
         value: 'append',
       },
       {
         name: 'Overwrite',
         value: 'overwrite',
       }
     ],
   }
   ```

## Best Practices

1. Field Display
   - Show required fields immediately
   - Hide optional fields in collections
   - Use progressive disclosure
   - Group related fields
   - Order by importance

2. Field Naming
   - Use GUI terms over API terms
   - Be consistent with terminology
   - Use clear, descriptive names
   - Follow platform conventions
   - Include API terms in hints

3. Help Text
   - Use info boxes sparingly
   - Provide contextual hints
   - Add relevant tooltips
   - Include placeholder text
   - Link to documentation

4. Common Patterns
   - Support dual ID selection
   - Use toggles appropriately
   - Handle all ISO 8601 dates
   - Support JSON input methods
   - Follow upsert standards

## Dependencies
[n8n-build-ui-text_and_naming.mdc](mdc:.cursor/rules/n8n-build-ui-text_and_naming.mdc)
[n8n-build-ui-field_organisation.mdc](mdc:.cursor/rules/n8n-build-ui-field_organisation.mdc)
[n8n-build-ui-help_text.mdc](mdc:.cursor/rules/n8n-build-ui-help_text.mdc)
[n8n-build-ui-common_patterns.mdc](mdc:.cursor/rules/n8n-build-ui-common_patterns.mdc)
