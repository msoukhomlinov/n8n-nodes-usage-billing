---
description: n8n node, Standards for code quality and consistency using n8n's node linter (eslint-plugin-n8n-nodes-base) for static code analysis. [linting, eslint, code quality, static analysis, best practices]
globs: 
alwaysApply: false
---
---
description: n8n node, Standards for code quality and consistency using n8n's node linter (eslint-plugin-n8n-nodes-base) for static code analysis. [linting, eslint, code quality, static analysis, best practices]
globs: 
---
# n8n Node Linting Standards

1. Linter Setup
   ```json
   {
     "devDependencies": {
       "eslint-plugin-n8n-nodes-base": "^1.0.0",
       "eslint": "^8.0.0",
       "@typescript-eslint/parser": "^5.0.0"
     },
     "scripts": {
       "lint": "eslint . --quiet",
       "lintfix": "eslint . --quiet --fix"
     }
   }
   ```

2. File Scope Coverage
   - Node files (`*.node.ts`)
   - Resource description files (`*Description.ts`)
   - Credential files (`*.credentials.ts`)
   - Package configuration (`package.json`)
   - Example:
   ```typescript
   // my-api.node.ts
   /* eslint-disable n8n-nodes-base/node-filename-against-convention */
   export class MyApiNode implements INodeType {
     // Implementation
   }
   ```

3. VS Code Integration
   ```json
   // .vscode/settings.json
   {
     "editor.codeActionsOnSave": {
       "source.fixAll.eslint": true
     },
     "eslint.validate": [
       "javascript",
       "typescript"
     ]
   }
   ```

4. Automated Checks
   ```yaml
   # .github/workflows/lint.yml
   name: Lint
   on: [push, pull_request]
   jobs:
     lint:
       runs-on: ubuntu-latest
       steps:
         - uses: actions/checkout@v3
         - uses: actions/setup-node@v3
           with:
             node-version: 20
         - run: npm ci
         - run: npm run lint
   ```

5. Exception Handling
   ```typescript
   // Single line exception
   // eslint-disable-next-line n8n-nodes-base/node-param-required-false
   
   // Block exception
   /* eslint-disable n8n-nodes-base/node-param-description-missing-for-return-all */
   // Code block
   /* eslint-enable n8n-nodes-base/node-param-description-missing-for-return-all */
   
   // File exception (at top of file)
   /* eslint-disable n8n-nodes-base/node-execute-block-wrong-error-thrown */
   ```

6. Common Rules
   ```typescript
   // Filename convention
   // my-service.node.ts
   export class MyServiceNode implements INodeType {
     // Implementation
   }

   // Required parameter validation
   properties: [
     {
       displayName: 'Email',
       name: 'email',
       type: 'string',
       required: true,  // eslint-enforced for critical fields
       default: '',
     }
   ]

   // Error handling in execute
   async execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {
     try {
       // Implementation
     } catch (error) {
       // Proper error handling required by linter
       throw new NodeApiError(this.getNode(), error);
     }
   }
   ```

7. Pre-publish Checks
   ```json
   {
     "scripts": {
       "prepublishOnly": "npm run lint && npm run build"
     }
   }
   ```

8. Code Quality
   - Run linter before commits
   - Fix all linting errors before deployment
   - Document necessary exceptions
   - Keep exceptions to minimum

9. IDE Integration
   - Use VS Code ESLint extension
   - Enable auto-fix on save
   - Configure proper TypeScript integration
   - Use recommended workspace settings

10. CI/CD Integration
    - Include linting in CI pipeline
    - Fail builds on linting errors
    - Automate fixes where possible
    - Track linting metrics

11. Exception Management
    - Document all lint exceptions
    - Review exceptions periodically
    - Use specific rule disabling
    - Avoid blanket disabling

12. Team Standards
    - Share common linting configuration
    - Document custom rules
    - Regular linting reviews
    - Maintain consistency

## Dependencies
[n8n-build-node_implementation.mdc](mdc:.cursor/rules/n8n-build-node_implementation.mdc)
[n8n-build-style-declarative_style.mdc](mdc:.cursor/rules/n8n-build-style-declarative_style.mdc)
[n8n-build-style-programmatic_style.mdc](mdc:.cursor/rules/n8n-build-style-programmatic_style.mdc)
