---
description: thresholds, limits, supportability;Comprehensive guide for Autotask REST API thresholds, rate limits and supportability requirements
globs: 
alwaysApply: false
---
---
description: thresholds, limits, supportability;Comprehensive guide for Autotask REST API thresholds, rate limits and supportability requirements
globs:
---

# Autotask REST API Thresholds and Limits

## Overview
The Autotask REST API implements various thresholds and limits to ensure consistent service quality and performance across all customers. This documentation outlines the key limitations and supportability requirements.

## Core API Limits

### Request Thresholds
- **Hourly Limit**: 10,000 external description: autotask rest api, per hour per database
- **Monitoring**: Usage-based latency applies as threshold is approached
- **Scope**: Limit applies across all integrations for a database

### Query Limitations
- **Maximum Records**: 500 records per entity query
- **OR Conditions**: Maximum 500 OR conditions per API call
- **Execution Timeout**: 5-minute maximum execution time for all calls

### Attachment Constraints
- **File Size**: 6-7 MB per individual file
- **Bulk Transfer**: Maximum 10,000,000 bytes within a 5-minute period
- **Restrictions**: Limited to Autotask-allowed file types

### Usage-Based Latency Tiers
| Usage Percentage | Added Latency |
|-----------------|---------------|
| 0% - 49.99%     | 0 seconds     |
| 50% - 74.99%    | 0.5 seconds   |
| 75%+            | 1 second      |

## Best Practices
1. Implement pagination for large data sets
2. Use strong filters to limit returned records
3. Monitor API usage through the API Activity by Hour report
4. Structure queries efficiently to avoid timeout limits
5. Consider thread limiting impacts on integration development

## Monitoring Usage
Query current usage via:
```
GET https://webservices[n].autotask.net/atservicesrest/v1.0/ThresholdInformation
```

Response format:
```json
{
    "externalRequestThreshold": 10000,
    "requestThresholdTimeframe": 60,
    "currentTimeframeRequestCount": 2
}
```
