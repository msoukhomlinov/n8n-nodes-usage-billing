---
description: n8n node, Core implementation standards for building n8n nodes, including execution handling, error management, and API integration.
globs: 
alwaysApply: false
---
---
description: n8n node, Core implementation standards for building n8n nodes, including execution handling, error management, and API integration.
globs: [implementation, methods, execution, error handling, validation]
---

# n8n Node Implementation Standards

- Node classes must implement required interfaces (`INodeType`, `INodeTypeDescription`)
- Execute method must follow this structure:
  ```typescript
  async execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {
    const items = this.getInputData();
    const returnData: INodeExecutionData[] = [];
    const resource = this.getNodeParameter('resource', 0) as string;
    const operation = this.getNodeParameter('operation', 0) as string;
    
    try {
      // Implementation
    } catch (error) {
      if (this.continueOnFail()) {
        returnData.push({ json: { error: error.message } });
      } else {
        throw error;
      }
    }
    
    return [returnData];
  }
  ```
- Error handling must include try-catch blocks, continueOnFail() logic, and meaningful error messages
- All input parameters must be validated with proper type assertions and required field checks
- API integration requires proper authentication, rate limiting, pagination handling, and versioning support

## Dependencies
[n8n-build-code_standards.mdc](mdc:.cursor/rules/n8n-build-code_standards.mdc)
[n8n_security-security_standards.mdc](mdc:.cursor/rules/n8n_security-security_standards.mdc)
