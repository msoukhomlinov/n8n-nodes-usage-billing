---
description: webhooks;examples;implementation;Learn how to configure webhook fields with practical examples and use cases
globs: 
alwaysApply: false
---
---
description: webhooks;examples;implementation;Learn how to configure webhook fields with practical examples and use cases
---

# WebhookFields Implementation Examples

## Basic Field Configuration

### Subscribe to Status Changes

```http
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/12/Fields

{
    "fieldId": "24",  // Status field ID
    "isDisplayAlwaysField": false,
    "isSubscribedField": true,
    "webhookId": "12"
}
```

### Include Reference Fields in Payload

```http
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/12/Fields

{
    "fieldId": "7",  // Company ID field
    "isDisplayAlwaysField": true,
    "isSubscribedField": false,
    "webhookId": "12"
}
```

## Common Use Cases

### Ticket Status Monitoring

```http
# 1. Subscribe to status changes
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/15/Fields

{
    "fieldId": "24",  // Status field
    "isSubscribedField": true,
    "webhookId": "15"
}

# 2. Include essential ticket information
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/15/Fields

{
    "fieldId": "29",  // Title field
    "isDisplayAlwaysField": true,
    "webhookId": "15"
}

# 3. Include reference identifiers
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/15/Fields

{
    "fieldId": "8",  // Ticket number field
    "isDisplayAlwaysField": true,
    "webhookId": "15"
}
```

### Resource Assignment Changes

```http
# 1. Subscribe to resource changes
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/18/Fields

{
    "fieldId": "45",  // Resource field
    "isSubscribedField": true,
    "webhookId": "18"
}

# 2. Include priority for context
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/18/Fields

{
    "fieldId": "33",  // Priority field
    "isDisplayAlwaysField": true,
    "webhookId": "18"
}
```

## Query Examples

### List All Field Configurations
```http
GET https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/20/Fields
```

### Filter by Field Type
```http
GET https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/20/Fields?filter=isSubscribedField eq true
```

### Paginated Query
```http
GET https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/20/Fields?pageSize=50&pageNumber=1
```

## Best Practices

1. Optimise Payload Size:
```http
# Recommended: Only essential fields
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/20/Fields

{
    "fieldId": "8",  // External ID
    "isDisplayAlwaysField": true,
    "webhookId": "20"
}

# Not Recommended: Including large text fields
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/20/Fields

{
    "fieldId": "102",  // Description field (large text)
    "isDisplayAlwaysField": true,
    "webhookId": "20"
}
```

2. Efficient Trigger Configuration:
```http
# Recommended: Specific trigger field
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/22/Fields

{
    "fieldId": "24",  // Status field
    "isSubscribedField": true,
    "webhookId": "22"
}

# Not Recommended: Multiple unnecessary triggers
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/22/Fields

{
    "fieldId": "29",  // Title field
    "isSubscribedField": true,
    "webhookId": "22"
}
```

## Error Response Examples

### Invalid Field ID
```json
{
    "errors": [{
        "code": "InvalidParameter",
        "message": "Field ID 999 does not exist for this entity",
        "resourceId": null
    }]
}
```

### Duplicate Configuration
```json
{
    "errors": [{
        "code": "DuplicateRecord",
        "message": "Field configuration already exists for this webhook",
        "resourceId": "15"
    }]
}
```

### Rate Limit Exceeded
```json
{
    "errors": [{
        "code": "TooManydescription: autotask rest api,",
        "message": "API rate limit exceeded. Please try again in 60 seconds.",
        "resourceId": null
    }]
}
```

## Performance Tips

1. Batch Configuration:
```http
# Configure multiple fields in quick succession
POST https://webservices[n].autotask.net/atservicesrest/v1.0/CompanyWebhooks/25/Fields

[
    {
        "fieldId": "24",
        "isSubscribedField": true,
        "webhookId": "25"
    },
    {
        "fieldId": "8",
        "isDisplayAlwaysField": true,
        "webhookId": "25"
    }
]
```

2. Implement Retry Logic:
```javascript
async function configureWebhookField(config, maxRetries = 3) {
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
        try {
            const response = await fetch('/atservicesrest/v1.0/CompanyWebhooks/Fields', {
                method: 'POST',
                body: JSON.stringify(config)
            });

            if (response.status === 429) {
                const retryAfter = response.headers.get('Retry-After');
                await new Promise(resolve => setTimeout(resolve, retryAfter * 1000));
                continue;
            }

            return await response.json();
        } catch (error) {
            if (attempt === maxRetries) throw error;
            await new Promise(resolve => setTimeout(resolve, 1000 * attempt));
        }
    }
}
```
